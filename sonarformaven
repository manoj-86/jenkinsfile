pipeline {
    agent any
    stages {
        stage ('git'){
            steps {
                script{
                try{
                checkout([$class: 'GitSCM',
                branches: [[name: '*/master']], 
                doGenerateSubmoduleConfigurations: false, 
                extensions: [], submoduleCfg: [],
                userRemoteConfigs: [[credentialsId: 'Git',
                url: 'https://github.com/manoj-86/petclinic.git']]])
                }
            catch(Exception e){
                echo "Git Clone Failed...."
            }
            }
            }
        }
        stage('SonarQube analysis') {
      
                 steps {
                        script{
                        def maven_path= tool 'maven'
                         withSonarQubeEnv('sonarqube') {
      
                        sh """
                        
                        $maven_path/bin/mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar
                        """
                        }
                        sh """
                        
                        $maven_path/bin/mvn clean compile test package
                        """
                        report_download()
                }
      }
        }
    }    
        
    }
void report_download(){
    print "download The report from qube"
}

    
